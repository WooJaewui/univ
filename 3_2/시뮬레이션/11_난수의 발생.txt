
 난수의 발생.



 # 난수의 성질.

난수발생 알고리즘.
Subprogram random( n, U ) { 
	n = n * 843314861 + 453816693 
	if( n < 0 ) then {
		n = n + 2147483647 + 1 
	} 
}

일양분포.
같이 일정한 분포도.

난수의 성질.
U[ 0, 1 ) 일양분포.
임의성( random ) - 예측할 수 없다.
상관관계가 없다.
반복가능.
기억용량, 발생속도.



 # 난수 발생법.

중앙 이승법.
X0 = 7182
X0 ** 2 = 51, 581, 124
X1 = 5811
U1 = 0.5811

합동법. Lehmer의 공식.
Xi = aXi-1 + c ( mod m )
a : 곱수 0 < a < m
c : 증분 0 <= c < m
m : 게수 m > 0
X0 : 초기값, 0 <= Xi <= m - 1.

최대주기.
Xi = aXi-1 + c ( mod m )
1. ( m, c ) = 1 ( 서로소 )
2. q | m -> q | ( a - 1 ) ( q : 소수 ) : 소수가 m을 나눈다.
3. 4 | m -> 4 | ( a - 1 ) : 4가 m을 나눈다.
 | : 나눌 수 있다. ( 나머지가 없다 )



 # 컴퓨터 연산.

컴퓨터 연산과정.
Xi = aXi-1 + c ( mod m )
m = 2 ** b을 채택.
   = 2 ** 31 ( 32bit 머신 )
over flow 연산 방식을 사용.

Overflow 연산.
mod를 2의 배수로 구현해서 그 자리수만큼의 값만 구한다.
X0 = 7 = 7	-> 111		= 0111
X1 = 38 = 6	-> 100110	= 0110
X2 = 33 = 1	-> 100001	= 0001



 # 합동법.

혼합식 합동법 c != 0.
Xi = aXi-1 + c ( mod m )
최대주기 m.

승산식 합동법 c = 0
Xi = aXi-1 ( mod m )
최대주기를 갖지 못함.
m = 2 ** b 이면 p <= 2 ** b-2
최대주기 m-1은 가능 ( 단, m은 소수 )

합동법 문제점.
Xi는 결정적이다. ( 초기값을 알면 예측이 가능하다 )
Ui는 유리수값만 취한다.
의사난수, 적당한 a, c, m 선택, m : 최대값, 검정통과.




