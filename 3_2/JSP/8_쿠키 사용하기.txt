
 쿠키 사용하기.



 # 쿠키의 생성과 사용.

쿠키의 의미.
사용자 식별 정보.
<이름, 값>을 가지는 작은 크기의 텍스트 데이터.
쿠키에 추가 정보를 포함시킬 수도 있음.

쿠키의 사용.
최초 요청의 처리에서 웹 서버가 쿠키를 만들어 응답 헤더에 포함시킴. ( 서버에서 생성 )
웹 브라우저가 쿠키를 저장했다가, 차후 같은 서버에 다른 요청을 보낼 때 쿠키를 요청 헤더에 넣어보냄.
서버와 클라이언트 간 상태 정보를 공유함으로써 연이은 여러 요청을 관련지어 처리할 수 있음.

쿠키의 구성.
하나의 쿠키는 하나의 <이름, 값>을 가짐.
이름과 값은 알파벳과 숫자로 구성된 문자열.
쿠키는 추가 정보를 가질 수 있음.
추가 정보는 브라우저에서 기억하고 있음.

쿠키 추가 정보.
유효 시간 : 쿠키의 지속 시간.
도메인 : 쿠키를 만들고 이용할 서버를 지정.
경로 : 쿠키가 보내질 서버의 경로를 지정.
주석 : 쿠키의 목적을 설명.

쿠키의 생성.
서버 측 JSP 페이지에서 Cookie 클래스의 객체를 생성.
new Cookie( String name, String value ) ;

쿠키의 전송.
쿠키를 전송하기 전에 추가 정보를 설정할 수 있음.
response.addCookie( cookie ) ;

쿠키 클래스의 메소드.
getName( ) : 쿠키의 이름을 리턴.
getValue( ) : 쿠키의 값을 리턴.
setValue( String value ) : 쿠키의 값을 value로 지정한다.
setDomain( String pattern ) : 쿠키가 전송될 서버의 도메인을 지정한다.
getDomain( ) : 지정된 쿠키의 도메인을 리턴한다.
setPath( uri ) : 쿠키의 전송 경로를 설정한다.
getPath( ) : 설정된 쿠키의 전송 경로를 리턴한다.
setMaxAge( time ) : 쿠키의 유효시간을 초 단위로 설정한다. ( 기본값 -1 )
getMaxAge( ) : 쿠키의 유효 시간을 리턴.



 # 쿠키 값 읽기, 변경, 삭제.

쿠키 값 읽기.
Cookie[ ] cookies = reqeust.getCookies( )를 사용한다.
Cookie 객체들의 배열을 리턴함.

쿠키의 유효 시간.
정보의 공유를 위해 브라우저가 쿠키를 저장하는 기간.
setMaxAge( int seconds )를 사용하여 지정.
유효 시간이 경과된 쿠키는 웹 브라우저에서 자동 삭제됨.
유효 시간을 0으로 하면 기존 쿠키를 삭제하는 것.
시간 설정을 하지 않으면 웹 브라우저가 종료될 때 쿠키가 삭제됨. ( 기본값 -1 )

쿠키 값의 변경.
같은 이름의 Cookie 객체를 만들고 또는 변경하려는 Cookie 객체의 값을 바꾼 후 응답에 쿠키를 추가.

쿠키의 삭제.
쿠키 값의 변경 방법과 유사.
삭제하고자 하는 Cookie 객체 또는 같은 이름의 객체를 이용하여 유효 시간을 0으로 한 후 응답에 추가.
 


 # 쿠키의 도메인과 경로.

쿠키의 도메인.
기본적으로 쿠키는 그것을 보낸 서버에게만 전송될 수 있음.
쿠키에 도메인 설정을 하면 같은 도메인 상에 있는 다른 호스트들과 쿠키를 공유할 수 있음.
cookie.setDomain( "도메인이름.com" ) ;

쿠키의 도메인 설정.
쿠키를 이용할 도메인을 정하는 것.
서버는 자신이 속한 도메인 내에서 쿠키의 도메인을 설정할 수 있음. ( 다른 도메인 X )

쿠키의 경로 설정.
클라이언트가 서버에 요청을 보낼 때, 쿠키를 보낼 서버 상의 경로를 정하는 것.
경로는 URL에서 서버 주소 이후에 나오는 URI 부분을 의미함.
지정경로 + 지정경로 하위경로 페이지에만 쿠키를 보냄.
경로를 지정하지 않으면 쿠키를 만든 페이지가 위치한 경로로 설정됨.
Cookie.setPath( uri )을 사용.



 # 쿠키를 이용한 로그인 구현.

로그인 구현.
서버가 응답을 보낸 후에는 클라이언트에 대해 알지 못함.
a.jsp 요청과 계속된 b.jsp 요청은 서로 무관함.
상태 관리를 위해 쿠키나 세션을 이용해야 함.

쿠키를 이용한 로그인/로그아웃.
아이디와 비밀번호를 입력할 수 있는 폼을 제시.
사용자가 입력한 아이디, 비밀번호를 읽고, 가입된 회원인지 판단.
가입된 회원이라면 로그인 상태에서 사용할 쿠키를 생성.
이후 페이지 방문시 서버가 클라이언트가 보낸 쿠키를 가지고 로그인 여부를 판단.
로그아웃을 하면 사용했던 쿠키를 삭제.




