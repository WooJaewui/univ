
 표현언어.



 # 표현 언어의 기본 문법.

표현언어.
JSP 2.0에서 추가된 간결한 수식 언어로 EL이라 함.
자바빈이나 영역의 속성에 저장도니 데이터를 쉽게 표현할 수 있게 함.
스크립트 요소 밖에서 사용되며, 데이터를 출력하거나 태그에 사용되는 속성의 값을 지정할 때 사용.
표현식 <%= ... %>을 대신하며, JSp 페이지에서 스크립트의 사용을 줄여줌.

기본형식 - ${ 수식 } 
EL 수식에서 산술, 관계, 논리 연산이 가능.
수식에서 가장 많이 사용되는 연산자는 .과 [ ]

EL에서 사용가능한 형식.
${ 객체 }
${ 객체.속성 } 
${ 객체[ "속성" ] }
${ 객체[ '속성' ] }
${ 배열[ 첨자 ] }

표현 언어의 기능.
수식에 사용되는 산술 연산자, 관계 연산자, 논리 연산자 제공.
자바 클래스의 메소드 호출 기능 제공. ( 태그 라이브러리에 정의된 함수를 호출 )
집합 객체( 배열이나 리스트 )에 대한 접근 방법 제공.
JSP에서 영역 내장 객체에 저장된 속성과 자바빈 객체를 쉽게 다룰 수 있음.
pageScope, requestScope, sessionScope, applicationScope.
표현 언어에서 별도의 내장 객체 제공.

표현 언어의 해석과 사용.
표현 언어에서 사용되는 자료형은 정수, 실수, 문자열, true/false, null.

${ name }의 해석.
name은 표현 언어의 내장 객체가 될 수 있음.
name은 영역에 저장된 속성의 이름이 될 수 있음.
순서대로 page, request, session, application 영역에 등록된 속성에서 이름이 name인 것을 찾음.
이때 상응하는 속성의 값( 객체 )을 문자열로 출력함.
찾을 수 없다면 null을 반환.
name은 자바빈 객체의 이름이 될 수 있음.
수식 계산의 결과는 객체의 문자열 표현이 됨.

표현 언어의 사용.
스크립트 요소 밖에서 사용.
태그의 몸체 내부나 데이터 출력이 필요할 때 사용됨.
EL 수식의 최종 결과는 String.
태그에 사용되는 속성의 값을 지정할 때 사용됨.
<%@ page isELIgnored ="true" %> : EL을 비활성화 함.

표현 언어의 사용 예.
${ person.name } : EL 내장 객체, 자바빈 객체 또는 영역에 저장된 속성의 이름.
${ person[ "name" ] } : EL 내장 객체, 자바빈 객체 또는 영역에 저장된 속성의 이름.
${ param.userid } : <%= request.getParameter( "userid" )와 같다.
${ requestScope.name } : <%= request.getAttribute( "name" ) %>



 # 표현 언어의 내장 객체.

내장객체.
pageScope, requestScope, sessionScope, applicationScope : 데이터를 저장할 수 있는 Map 객체.
param : parameter의 값을 담고 있는 Map 객체.
paramValues : parameter의 이름을 담고 있는 Map 객체.
header : 요청 헤더에 데이터를 담을 수 있는 Map 객체.
headerValues : 요청 헤더에 이름을 담고 있는 Map 객체.
cookie : Cookie 배열을 저장한 Map 객체.
initParam : 초기파라미터를 담고 있는 Map 객체.
pageContext : JSP의 pageContext 내장 객체와 동일.

내장 객체의 사용.
${ pageContext.request.requestURI }
${ requestScope.name }
${ param.code } 
${ cookie.이름.name } : cookie.getName( "이름" ) ; 
${ cookie.이름.value } : cookie.getValue( "이름" ) ;
${ param.name } : request.getParameter( "name" ) ;
${ param[ 'age' ] } : request.getParameter( "age" ) ;



 # 표현 언어와 자바빈.

자바빈 - 액션 태그에서 사용하기.
<jsp:useBean> 액션 태그로 자바빈 객체를 선언.
<jsp:getProperty>와 <jsp:setProperty> 액션 태그를 이용하여 객체의 속성을 읽거나 변경함.

자바빈 - 스크립트릿에서 사용하기.
<jsp:useBean> 액션 태그로 선언된 자바빈 객체를 스크립트 요소에서 사용함.
스크립트릿 안에서 자바빈 클래스의 객체를 생성한 후 자바빈 객체를 사용함.

자바빈 - 표현 언어에서 사용하기.
<jsp:useBean> 액션 태그로 자바빈 객체를 선언한 경우
${ 자바빈객체.속성 }의 형식을 사용하여 값을 읽을 수 있음.
스크립트릿에서 자바빈 객체를 생성한 경우 자바빈 객체를 영역 객체의 속성으로 등록해야 사용 가능.



