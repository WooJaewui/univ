
 CLR 구문분석.



 # SLR 구문분석.

증가문법.
1번째 S 출발기호 앞에 0번째에  S'를 생성하는 문법이다.

Canonical Collection.
GOTO 함수들의 결과인 closure 함수들의 집합. 
예 : I1 = { [ S -> L = · S , ... ] }  

FOLLOW.
FOLLOW(S) : S바로 뒤에 나오는 기호.

SLR 구문분석의 문제점.
파싱표에서 상태와 기호의 접점인 액션 값이 두 개 이상이 나오면 충돌이 발생. ( 문제 )
FOLLOW 기호만으로는 문제가 해결이 안된다.



 # LR(1) 항목. ( CLR 파싱표 ) - Lookahead

Lookahead 필요성.
FOLLOW( A ) 라는 하나의 값에 두개 이상의 값이 나오는 경우가 발생한다.
Lookahead 내 뒤에 따라오는 follow 기호를 미리 알아본다.
Lookahead를 사용하면 FOLLOW 기호를 사용하지 않는다.

LR(1) 표현방법.
[ A -> a*b, $]
$ : lookahead.
b가 앱실론이 되면 $가 된다.
b가 앱실론이 아니면 FIRST( b$ )이 된다.

구문분석.
SLR과 똑같다.
Shift : GOTO( li , a )에서 a가 터미널 기호일 때 shift한다.
GOTO : GOTO( li, A )에서 A가 논터미널 기호일 때 GOTO한다.
REDUCE : 문법에서 S -> A · 처럼 다음 기호가 없을 때 reduce한다.
모든 기호를 shift하면 reduce하고 reduce까지 끝나면 종료된다.




