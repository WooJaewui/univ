
 제어장치(1)



 # 제어장치의 개요.

제어장치.
컴퓨터시스템의 모든 장치들을 유기적으로 제어하는 장치.

제어장치의 역할.
기억장치에 저장된 프로그램으루보퉈 명령어를 순차적으로 읽어내어 연산코드 부분을 해독한 후,
그 결과에 따라 컴퓨터 시스템의 각 요소를 동작시키는 제어신호를 발생시켜 명령어가 수행되도록 한다.
하나의 명령어는 한 클럭 동안에 수행되는 마이크로 연산의 집합으로 구성.
명령어의 실행은 이러한 마이크로 연산의 연속적인 반복으로 이루어짐.

제어장치와 처리장치의 관계.
외부신호( 컴퓨터 명령 ) -> 제어장치 -> 제어신호( 마이크로 연산 ) + 입력 데이터 
-> 처리장치 -> 명령어 연산수행 -> 상태신호 -> 제어장치.
				        -> 출력데이터.

중앙처리장치 CPU Central Processing Unit.
제어장치 + 처리장치.



 # 제어장치의 구성.

구성요소.
명령어 레지스터, 명령어 해독기, 순서 제어기, 주소 처리기.

제어장치의 동작. ( 명령어 수행과정 )
프로그램카운더( PC )에 저장된 주소로 기억장치에 접근한다.
기억장치에서 명령어를 읽어와 명령어 레지스터( IR )에 저장하고, 프로그램 카운터를 1 증가.
읽어온 명령어에서 연산코드는 명령어 해독기로, 오퍼랜드는 주소처리기로 보낸다.
주소처리기는 명령어 수행에 필요한 오퍼랜드의 주소 또는 다음 명령어의 주소를 계산한다.
제어신호 발생기에서 연산코드를 해독하여 명령어 수행을 위한 제어신호를 발생한다.



 # 제어장치의 구현.

제어장치의 유형.
마이크로프로그램에 의한 제어장치. 
하드웨어의 의한 제어장치.

마이크로프로그램에 의한 제어장치.
제어단어와 같은 제어정보를 특별한 기억장치에 기억시킨 구조.
장점 : 제어신호를 수정하고자 할 때 융통성이 뛰어남.
단점 : 기억장치에서 명령을 인출하는 별도의 시간 때문에 속도가 느림.
고밀도 직접회로( VLSI )가 가능하여 대부분의 컴퓨터에서 사용.

하드웨어에 의한 제어장치.
순서회로와 같은 게이트와 플립플롭으로 이루어짐.
장점 : 순서회로로로 구성되기 때문에 고속 동작이 가능.
단점 : 회로의 동작방법이 바뀌면 다시 설계해야 함.
특수한 컴퓨터에 사용된다.



 # 마이크로프로그램에 의한 제어.

제어방식.
제어변수 값들을 여러 개의 단어로 결합하여 표현하고, 그것을 연속적으로 읽어서 제어논리에
공급하여 동작시키는 방식.

제어장치의 역할.
일련의 마이크로 연산을 순차적으로 수행하도록 제어.
이러한 제어를 위해 제어변수로서 제어단어를 사용.

제어단어.
0과 1의 스트링으로 표현.
각 제어단어에는 하나 이상의 마이크로명령어가 포함.
제어단어를 이용하면 처리장치의 구성요소들이 특정 시점에서 연산을 시작하도록 프로그램이 가능.

마이크로 프로그램.
마이크로 명령어들의 집합체.
제어기억장치에 마이크로 명령어들이 저장되어 있다. 



 # 제어장치의 구조.

제어 신호.
제어 신호 : 마이크로 명령어( 제어 단어 )  + 주소정보.

구성도.
외부입력 -> 다음주소 생성기( 순서기 ) -> 제어주소 레지스터( CAR ) 
-> 제어기억 장치( ROM ) -> 제어데이터 레지스터( CDR ) -> 제어 단어.

제어기억장치. ( ROM ) 
모든 제어정보( 제어신호 )를 항상 저장하고 있는 기억장치. 
여러개의 마이크로 명령어들이 저장되어 있다.

제어주소레지스터. ( CAR : Control Address Register )
제어기억장치에 있는 마이크로 명령어의 주소를 나타낸다.
다음에 읽을 마이크로명령어의 주소를 제어하는 레지스터. ( 다음 주소 생성기에 의해 값 변화 )

다음 주소 생성기. ( 순서기 )
다음에 수행될 마이크로명령어의 주소를 만들어 낸다.
CAR의 값을 변형시킨다. ( MUX로 되있다 )

제어 데이터레지스터. ( CDR : Control Data Register )
제어기억장치에서 읽어온 마이크로 명령어를 저장하고 있다.
시스템의 간소화를 위해 일반적으로 생략.

다음 주소 생성기 실행 순서.
CAR 1증가.
제어기억장치의 주소를 CAR로 적재.
외부로부터 온 주소를 CAR에 적재.
제어동작을 시작하는 초기주소 적재.

구성요소 예.
MUX1 : 외부주소와 제어 기억장치에 주소 데이터를 입력받고 제어주소 레지스터로 값을 출력.
MUX2 : 처리장치의 상태비트와 제어 기억장치의 주소 데이터를 입력받고 제어주소 레지스터로 값을 출력.
제어주소 레지스터( CAR ) : MUX1, MUX2에서 데이터를 입력받고, 제어 기억장치에 주소값을 출력.
제어기억장치 : 제어주소 레지스터에서 입력받은 주소값을 통해 제어 신호 처리장치로 출력.
처리장치 : 제어신호, 입력데이터를 받아서 명령어를 수행하고, 출력데이터와 상태비트를 출력.

제어신호 예.
처리장치 제어를 위한 16비트( 제어단어 ) + 다음주소 선택을 위한 10비트 = 제어신호 : 총 26비트로 구성.
16비트 : 처리장치 제어를 위한 제어단어.
1비트 : MUX1에서 외부에서 입력한 주소와 내부 마이크로명령어의 주소 중 하나를 선택.
3비트 : MUX2의 8개 입력 중 하나를 선택. ( 상태 비트 갯수 8개 = 2**3 3비트 )
6비트 : ROM의 64 단어를 선택하기 위한 주소 비트. 
제어 기억 장치 = 64 X 26. ( ROM )

제어 기억 장치의 예.
64 X 26( ROM ) : 64개의 제어 단어를 저장하고 있는 총 26비트의 제어기억장치( ROM )

제어장치의 동작 예.
CAR에 새로운 주소가 들어오면, 이 주소에 있는 26비트의 마이크로 명령어를 제어기억장치로부터 인출.
마이크로 명령어의 제어단어는 CAR의 다음 동작을 결정.
처리장치에서 해당하는 상태비트를 새로운 값으로 갱신하며, 다음 주소를 CAR로 전송.
CAR의 새로운 주소는 제어기억장치의 다음 마이크로 명령어를 지정.
이러한 과정을 각 클럭의 천이 때마다 반복.

