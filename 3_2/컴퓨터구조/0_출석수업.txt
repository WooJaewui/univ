
 컴퓨터구조 출석수업.



 # 형성평가.

중간 30% 기말 50% 형성평가 20%.
연습문제는 풀기만하면 정답의 유무와 상관없이 점수를 얻는다.
컴퓨터 구조 - 류욱재 교수님 skyroom7@knou.ac.kr



 # 1교시.

용어 정리.
인코딩 : 큰거를 적은걸로 줄인다.
디코딩 : 작은거를 큰걸로 늘인다.
멀티플렉서 : 여러개의 입력이 있을 때 하나의 출력을 한다.
플립플롭 : 한 비트의 2진 정보를 저장할 수 있는 장치.
레지스터 : 가장 빠른 저장장소. 여러 개의 플립플롭을 연결하여 구성.
S-RAM : 플립플롭을 가지고 만든다.
D-RAN : capacitor 가지고 만든다.
카운터 : 플립플롭을 사용해 만든 순서논리회로. 

컴퓨터 명령어 instruction.
컴퓨터가 수행해야 하는 일을 나타내기 위한 비트들의 집합.
일정한 형식을 가짐.

명령어 집합 instruction set.
컴퓨터에서 사용할 수 있는 명령어의 세트.
모든 컴퓨터는 자신의 명령어 집합을 가지고 있음.
동일 계열( AMD, Intel )의 컴퓨터는 같은 명령어 집합 사용.
명령어 집합을 이용하여 컴퓨터 시스템의 구조를 살펴볼 수 있음.

명령어의 구성.
연산코드 필드 OP code : 처리해야 할 연산의 종류. ( 데이터 타입 )
오퍼랜드 필드 operand : 처리할 대상 데이터 또는 데이터의 주소.

컴퓨터 명령어 수행 기능.
함수연산 기능 : 사칙연산, shift, 보수, and, or 등.
정보전달 기능 : CPU와 주기억장치 사이의 정보전달 기능.
순서제어 기능 : 조건 분기와 무조건 분기 등을 통해 명령어의 수행 순서를 제어하는 기능.
입출력 기능 : 주기억장치와 입출력장치 사이의 정보 이동 기능.

명령어 형식의 분류.
오퍼랜드의 기억장소에 따른 명령어 형식.
오퍼랜드의 수에 따른 명령어 형식.

오퍼랜드의 기억되는 장소에 따라.
누산기를 이용하는 명령어 형식.
다중 레지스터를 이용하는 명령어 형식.
스택 구조를 이용하는 명령어 형식.

누산기를 이용하는 명려어 형식.
누산기 : 명령어가 수행될 때 오퍼랜드를 기억해 
LOAD X : X에 데이터를 누산기에 적재해라.
STORE X : 누산기의 내용을 X번지에 저장해라. 

다중 레지스터를 이용하는 명령어 형식.
ADD R1,R2 : R1과 R2를 더해서 R2에 저장한다. ( 2주소 명령어 )
ADD R1, R2, R3 : R1과 R2를 더해라 R3로 전송한다. ( 3주소 명령어 )
MOVE R1, R2 : R1의 내용을 R2로 전송해라.
LOAD X, R1 : X번지의 내용을 R1에 적재해라.
STORE R1, X : R1의 내용을 X에 저장해라.

스택 구조를 이용하는 명령어 형식.
ADD : 맨 위의 내용과 그 아래의 내용을 더해서 스택의 맨 위로 전송해라.
PUSH X : X의 내용을 기억장치 스택의 맨 위로 전송해라.
POP X : 스택의 맨 위의 내용을 제거해라.



 # 2교시.

3-주소 명령어.
명령어 오퍼랜드의 개수가 세 개인 명령어 형식.
장점 : 프로그램의 길이가 짧다. ( 명령어의 길이가 짧음 )
단점 : 오퍼랜드를 나타내기 위한 비트 수가 가장 길다.

2-주소 명령어.
명령어 오퍼랜드의 개수가 두 개인  명령어 형식.
장점 : 3-주소 명령어에 비해 명령어의 길이는 짧아짐.
단점 : 같은 내용을 수행하기 위해 수행해야 하는 명령어의 수는 증가됨.

1-주소 명령어.
명령어 오퍼랜드의 개수가 하나인 명령어 형식.
장점 : 모든 연산은 누산기 레지스터와 기억장치와 저장된 오퍼랜드를 대상으로 수행.
단점 : 프로그램을 수행하기 위해 사용되는 명령어의 수는 더 증가.

0-주소 명령어.
스택 구조에 사용되는 형식.
장점 : 명령어의 길이가 매우 짧아서 기억공간을 적게 차지.
단점 : 특수한 경우를 제외하고는 많은 양의 정보가 스택과 기억장치 사이를 이동하게 되어 비효율적.

명령어 주소지정방식.
프로그램 수행 시 오퍼랜드를 지정하는 방식.
명령어의 주소 필드를 변경하거나 해석하는 규칙을 지정하는 형식.
주소지정방식을 사용하면 명령어의 수를 줄일 수 있는 효과적인 프로그램이 가능.

유효주소.
주소지정방식의 각 규칙에 의해 정해지는 오퍼랜드의 실제 주소. ( 주기억장치의 주소 )
레지스터에 저장하면 유효주소가 없다.

주소지정방식의 종류. 꼭 외우기.
의미 주소지정방식 : 명령어 형식에서 주소 필드를 필요로 하지 않는 방식.
즉치 주소지정방식 : 오퍼랜드를 통해 처리를 하겠다.  #변수
직접 주소지정방식 : 오퍼랜드의 주소가 들어가 있는 방법.
간접 주소지정방식 : 오퍼랜드의 주소 안에 주소값이 있는 방식. [ 변수 ] 
레지스터 주소지정방식 : 레지스터의 값을 가져 오는 것.
레지스터 간접 주소지정방식 : 레지스터 안에 주기억장치의 주소가 있는 경우.
상대 주소지정방식 : 외부에 있는 값( PC )와 오퍼랜드의 값을 더해서 만드는 방식. $변수
인덱스된 주소지정방식 : 외부에 인덱스 값과 오퍼랜드의 값을 더해서 만드는 방식.



 # 3교시.

중앙처리장치.
처리 장치 : 데이터를 처리하는 연산을 실행.
제어 장치 : 연산의 실행순서를 결정.
제어입력( 명령어 ) -> 제어장치 -> 제어신호 -> 처리장치 ->  상태신호 -> 제어장치.

처리장치의 구성.
산술논리연산장치( ALU ) : 산수, 논리, 비트연산 등의 연산을 수행.
레지스터 : 연산에 사용되는 데이터나 연산의 결과를 저장.

마이크로 연산.
레지스터에 저장되어 있는 데이터에 대해 이루어지는 기본적인 연산. ( 가장 작은 연산 ) 
명령어는 하나 이상의 마이크로 연산으로 표현된다.

레지스터 전송 마이크로 연산.
<- : 데이터 전송을 표시. ( 연산자 )
R2 <- R1 : R1의 데이터를 R2에 복사한다.
레지스터 간에 선의 수가 비트를 의미한다.
T1 : R2 <- R1  => T1이 1이 되면 R1을 R2로 복사한다.

시프트 마이크로 연산.
sr : shift right.
sl : shift left.
sr이나 sl에 대하여 입력 비트는 0으로 가정한다.

처리장치의 구성요소.
레지스터 세트.
산술논리연산장치.
내부 버스.

처리장치 내부버스.
입력 내부버스 : 멀티플렉서
도착 내부버스 : 디코더.

상태 레지스터.
C Carry bit.
S Sign bit.
Z Zero bit.
V Overflow bit.

제어단어.
제어변수( 선택신호 )들의 묶음.
0과 1로만 표현된다.

제어단어 구성하는 제어변수( 선택신호 ) 는?
레지스터 비트 수 + 산술논리연산장치 비트 수  + 시프터 비트 수 



 # 기말고사 팁.

데이터 저장 방식.
제어단어.( 선택 신호 )



 # 평가 과제.

수기로 작성.
한글에 넣은 후에 pdf로 저장한 후에 제출하기.




