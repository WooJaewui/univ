
 파일과 디렉토리.



 # 파일 시스템 탐색.

파일 시스템.
운영체제가 디스크( 파티션 ) 상에 파일들을 구성하는 방식.
파일과 디렉토리의 집합을 구조적으로 관리하는 체계.
다양한 형식의 파일 시스템이 존재.
리눅스는 전체 파일 시스템을 1개의 트리 구조로 관리. ( 1개의 루트 디렉토리만 있음 )
루트 디렉토리에 마운트 되어서 사용된다.

ls 명령.
파일과 서브 디렉토리 목록을 나열하는 명령.
파일이 가지는 속성도 확인할 수 있음.
ls directory : 디렉토리에 존재하는 파일과 서브 디렉토리의 정보를 출력.
ls file : 해당 파일의 정보를 출력.
ls : 현재 디렉토리의 존재하는 파일과 정보를 출력.
ls --help : ls 명령어의 도움말.
ls -help : 모든 속성의 옵션이 적요됨. ( --help와 구분해서 외우기 )

ls 명령 옵션.
-a ( --all ) : 모든 파일을 보여줌. ( ' . '으로 시작하는 숨김 파일도 보여줌 )
-d ( --directory ) : 디렉토리 자체에 대한 정보를 보여줌.
-F ( --classify ) : 실행 파일은 *, 디렉토리는 / , 심볼릭 링크는 @를 붙여 보여줌.
-l ( --format = long ) : 긴 포맷으로 결과를 보여줌.
-R ( --recursive ) : 재귀적으로 수행되는데 서브 디렉토리의 내용도 나열함.
-S ( --sort = size ) : 파일의 크기 순서로 결과를 보여줌.
-t ( --sort = time ) : 최종 수정 시간 순으로 보여줌.

리눅스 파일.
리눅스는 모든 것을 파일로 취긊한다. ( 디렉토리, 장치 )

파일의 종류 - 정규 파일. ( - ) 
데이터를 저장하는 데 주로 사용.
각종 텍스트 파일, 실행 파일, 이미지 파일 등 리눅스에서 사용하는 대부분의 파일.
실행 파일이나 이미지 파일의 경우 바이너리 형태로 저장되어 바이너리 파일이라고 함.

파일의 종류 - 디렉토리. ( / ) 
리눅스에서 디렉토리도 파일로 취급.
해당 디렉토리의 저장된 파일이나 하위 디렉토리에 대한 정보가 저장.

파일의 종류 - 심볼릭 링크. ( @ )
소프트 링크라고도 함.
원본 파일에 대한 링크로서 다른 이름으로 파일명을 지정한 것. ( 윈도우의 바로가기와 비슷 )

파일의 종류 - 장치파일. ( 블록 - b, 문자 - c ) 
리눅스에서 프린터, CD-ROM, 하드디스크, 키보드 등과 같은 각종 장치를 파일로 취급.
블록 디바이스 파일와 문자 디바이스 파일로 구분됨.

file 명령.
파일의 종류를 알려주는 명령. ( 예 - file /etc/init.d/sshd )

pwd 명령.
절대 경로 방식으로 현재 작업 디렉토리를 알려주는 명령. ( 예 - pwd )

cd 명령.
작업 디렉토리를 이동하는 명령.
디렉토리를 지정하지 않으면 사용자의 홈 디렉토리로 이동함. 
디렉토리 지정하는 방법은 절대 경로와 상대 경로가 있음.
예 : cd /usr/bin , cd ../dir1



 # 파일과 디렉토리의 관리.

mkdir 명령.
디렉토리를 만드는 명령.
옵션 : -p는 필요한 경우 상위 디렉토리를 만듦. -m은 디렉토리를 만들면서 접근권한 설정.
예 : mkdir dir1, mkdir -p backup/java

rmdir 명령.
디렉토리를 삭제하라는 명령.
비어있는 디렉토리만 삭제할 수 있음.
조건 없이 디렉토리를 삭제하려면 rm -r dir 또는 rm -rf dir를 사용해야 함.
옵션 : -p는 비어 있는 디렉토리를 삭제하면서 부모 디렉토리가 비게 되는 경우 부모도 삭제.
예 : rmdir -p dir1/dir2

cp 명령.
파일이나 디렉토리를 복사하는 명령.
대상 파일이 존재하면 덮어쓰기가 수행됨.
예 : cp -i file1 file2 : file1을 복사해서 file2를 만든다.
여러 파일을 지정된 디렉토리에 같은 이름으로 복사.
예 : cp file1 file2 dir1.
디렉토리를 재귀적으로 복사할 때 -r 옵션을 사용.
대상 디렉토리가 존재하는 경우, 그 곳에 디렉토리 자체가 복사됨.

mv 명령.
파일 또는 디렉토리의 이름을 변경하는 명령.
또는 다른 디렉토리로 이동하는 명령.
예 : mv file1 file2 - 파일의 이름을 변경함. ( file2가 존재하면 덮어쓰기가 수행됨 )
예 : mv dir1 dir2 - 디렉토리의 이름을 변경함. ( dir2가 존재하면 서브 디렉토리로 이동 )
예 : mv file1 file2 dir1 : 여러 파일을 지정된 디렉토리로 이동함.

rm명령.
파일을 삭제하는 명령. ( 파일만 삭제함 )
alias rm = 'rm -i'로 변경해서 사용하는 것도 좋은 방법이다.
-r 옵션은 디렉토리를 모두 삭제.
-i 옵션은 삭제 전에 물어봄.
-f 옵션은 물어보지 않고 무조건 삭제함.

파일의 접근권한.
권한이 없는 사용자의 접근을 막기 위해 접근권한을 설정함.
사용자의 부류에 따라 읽기/쓰기/실행 권한을 각각 설정함.
사용자부류 : 소유자( u ) , 그룹( g ) , 기타( o ) .
권한 : 읽기( r ) , 쓰기( w ) , 실행( x ) .
예 : -rw- rw- r-- : u( 읽기, 쓰기 ), g( 읽기, 쓰기 ), o( 읽기 )

디렉토리의 접근권한.
읽기( r ) : 디렉토리가 가진 파일과 서브 디렉토리의 목록 보기.
쓰기( w ) : 파일과 디렉토리를 만들거나 삭제하기.
실행( x ) : 디렉토리로 이동하거나 디렉토리에서 프로그램을 실행하기 또는 파일의 메타 정보 보기.
읽기/실행 권한을 가지고 있어야 해당 디렉토리로 이동하거나 해당 디렉토리에서 ls -l 명령을 수행할 수 있음.
예 : drwx r-x r-x : u( 읽기, 쓰기, 실행 ), g( 읽기, 실행 ), o( 읽기, 실행 ).

사용자부류.
user이름으로 로그인하면 u = user이름이 되고, 그룹도 user이름으로 자동으로 생성된다. g = user이름.

chmod 명령.
파일 소유자가 파일의 접근권한을 변경하는 명령.
-R 옵션을 디렉토리에 적용하면 모든 파일과 서브 디렉토리까지 권한을 변경.
8진수 모드 : 읽기는 4, 쓰기는 2, 실행은 1.
예 : chmod -R 755 dir1 => rwxr-xr-x = 111101101 = 755.
예 : chmod u+x file1 ( 소유자 u에게 x권한을 추가해라 )
예 : chmod u=rwx, g=rx, o=x file2 
예 : chmod =rwx file3 ( 모든 사용자부류에게 rwx를 적용 )

umask 명령.
접근권한의 기본값을 출력하거나 설정하는 명령.
보통 /etc/bashrc에 설정되어 있음.
-S 옵션은 기호 모드로 결과를 보여줌.
예 : umask ( 현재 기본값을 알 수 있음 )
예 : umask 002 ( 기타 사용자에게 쓰기 권한을 부여하지 않겠다. 775 접근권한을 주는 것 )
touch file 명령은 파일의 접근/수정 시간을 현재 시간으로 변경하며 파일이 존재하지 않으면 생성.

chown 명령.
root 사용자가 파일이나 디렉토리의 소유자를 변경하는 명령.
파일은 그것을 생성한 사용자 계정과 그룹이 곧 소유자와 소유 그룹으로 설정됨.
$su : super user( root 사용자로 로그인 )
예 : chown 소유자:그룹 / 소유자.그룹 files 

ln 명령.
파일을 다른 이름으로 연결하는 명령.
기본적으로 하드 링크를 만들며, -s 옵션을 사용하면 심벌릭 링크가 만들어짐.
하드링크 : 하나의 파일에 다른 이름을 부여하는 것. 다른 파일 시스템에는 링크할 수 없음. 
심벌릭 링크 : 독립적 파일. 다른 파일 시스템에 링크를 만들 수 있음. 원본을 삭제하면 의미가 없어짐. 
예 : ln file1 file1.hl ( 하드링크 - 링크카운트 증가 )
예 : ln -s file1 file1.sl ( 심볼링크 - 링크카운트 증가 X ) 



 # 파일의 내용 확인.

more 명령.
파일의 내용을 화면 단위로 출력하는 명령. ( 한 화면을 보여줌 상태에서 멈춤 )
한 화면에 모두 보여 줄 수 없을 때 '--More--(69%)'와 같은 메시지가 나옴.
space bar를 누르면 다음 화면으로 이동.
enter를 누르면 한 라인씩 이동.
q를 누르면 종료.
예 : more -20 + 10 /etc/services : 10번째 라인부터 보여주며, 20라인 단위로 보여줌.

less 명령.
more 명령의 개선된 버전.
위 또는 아래로 스크롤할 수 있음.
pageUp, PageDown, 키보드 위, 아래 등.
다양한 내부 명령이 있음.
라인 / 화면 단위 이동, 라인 / 퍼센트로 위치 지정, 검색 등.

head 명령.
파일의 맨 앞 부분을 출력하는 명령. ( 기본은 10라인 )
-n숫자 또는 -숫자를 사용하면 보고 싶은 라인 수를 변경할 수 있음.
예 : head -n 5 /etc/passwd
예 : head -3 /etc/*.conf

tail 명령.
파일의 마지막 부분을 출력하는 명령. ( 기본은 10라인 )
-n + 숫자를 사용하면 해당 라인부터 출력함.
-f 옵션을 사용하면 변화하는 파일의 내용을 계속 감시할 수 있음.
예 : tail -n + 5 /etc/passwd.
예 : tail -f /var/log/messages

cat 명령.
하나의 파일 또는 여러 파일을 연결( concatenate )시켜 화면에 출력.
파일을 지정하지 않으면 표준입력으로부터 읽음.
여러 파일의 내용을 연결시킬 때 사용할 수 있음. ( 리다이렉션 활용 )
옵션 -n을 사용하면 라인 번호를 붙일 수 있음.
예 : cat > cat1.txt ~~~~ ctrl + d ( ~~ 부분에 적은 내용을 cat1.txt에 입력 )
예 : cat cat1.txt
예 : cat cat*.txt > total.txt






