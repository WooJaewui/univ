
 셸 스크립트.



 # 선택 구조.

제어구조.
셸 스크립트에서 실행을 제어하기 위해 선택과 반복 구조를 사용한.
if 명령, for 명령, case 명령, while 명령, until 명령.

if명령(1)
if command... ; then 
	command...
elif command... ; then
	command...
else 
	command...
fi 

if 설명.
if나 elif 다음에 나오는 마지막 명령의 종료 상태값으로 참과 거짓을 구분함.
종료 상태값 0은 성공적 종료를 의미하며 참으로 간주함.

if의 조건 검사.
if test expression ; then 
	command...
if [ expression ] ; then
	command...

수식에 사용되는 연산자.
file1 -nt file2 : 파일1이 파일2보다 새로운 것인가.
file1 -ot file2 : 파일1이 파일2보다 오래된 것인가.
-d file : 파일이 디렉토리인가.
-e file : 파일이 존재하는가.
-f file : 파일이 존재하고 정규 파일인가.
-s file : 파일이 존재하고 크기가 0보다 큰다.
-r file : 파일이 읽기 가능한가.
string1 > string2 : 문자열1이 문자열2보다 큰가( 사전 순서 ). test 명령을 사용할 떄는 비교를 위해 \>를 사용
string1 = string2 : 두 문자가 같은지. ( ==도 사용가능 )
string != string2 : 문자열1이 문자열2와 다른가.
integer1 -eq integer2 : 정수1과 정수2가 같은가.
integer1 -ne integer2 : 정수1과 정수2가 다른가.
integer1 -le integer2 : 정수1이 정수2보다 작거나 같은가.
integer1 -lt integer2 : 정수1이 정수2보다 작은가

case 명령.
다중 선택을 지원하는 복합 명령. ( Java 언어에 switch문의 의미와 거의 같음 )

case 문법.
case word in
	pattern ) command... ; 
esac

case 설명.
word부분을 먼저 확장하고 pattern과 매칭되는지 검사함.
매칭이 이루어지면 상응하는 명령이 수행됨.
매칭이 이루어지면 이후의 매칭 시도는 없음.
pattenr에서 * 는 default 키워드를 의미한다.

case pattern.
a ) : 문자 a인 경우.
[[:alpha:]] ) : 1개의 알파벳 문자인 경우.
??? ) : 임의의 세 글자인 경우.
*.txt ) : .txt로 끝나는 경우.
[aeiou] ) : 모음에 해당하는 영문 소문자 1개인 경우.
[ABE][0-9] ) : 앞 글자가 A,B,E 중 하나이고 다음 글자가 숫자인 두 글자.
* ) : 임의 길이의 글자와 매칭됨. ( default ) 

사용예시.
case 10 in
100) echo "100 success" ;;
10) echo " 10 success" ;;
esac



 # 반복문.

for 형식1.
for variable[ in word... ] ; do
	command...
done

for 형식1 설명.
word... 부분을( 값의 목록) 을 먼저 확장함.
word목록에 존재하는 값을 순차적으로 변수 variable에 대입하고 do와 done 사이의 명령을 수행.
word부분이 없다면 in "$@"가 있는 것으로 가정함.

사용예시1.
for i in 1,2,3,4,5 ; do
	echo $i  
done

사용예시2.
for i in {A..D} ; do
	echo $i
done

for 형식2.
for (( exp; exp2; exp3 )) ; do
	command...
done

for 형식2 설명.
exp1 ~ exp3은 수식으로 각각 생략이 가능함.
exp1는 제어 변수의 초기화를 위해 한 번 수행됨.
exp2가 참인 동안 명령과 exp3이 반복 수행됨.

for 형식 예시.
for (( i=0 ; i<=10 ; i++ )); do
	echo $i
done

[ ] 형식.
[ ] : text exp와 같다.

while 형식1.
while command ; do
	command
done

while 설명.
while 다음에 나오는 명령을 실행하여 참 또는 거짓을 판단함.
if 명령과 마찬가지로 종료 상태값이 0이면 참으로 판단.
조건 비교를 위해 text expression 또는 [ expression ]을 자주 사용함.

(( )) 형식.
(( )) : (( 7+7 ))처럼 연산을 수행하는 장소를 제공한다.

while 형식2.
((exp))
while ((exp2)); do
	command...
	((exp3))
done

while 형식2 설명.
(( expression ))은 수식 계산에 사용되는 복합 명령.
let "expression"과 동일하며 test 명령 대신에 사용할 수 있음.
while 다음의 (( expression ))에서 수식 결과가 0이 아닌 경우 종료 상태값이 0이 되며 참으로 판단.

while 형식2 예시.
LIMIT = 10
(( a = 0 ))
while (( a<LIMIT )) ; do
	echo "$a"
	(( a++ ))
done

until 형식.
until command ; do
	command
done

until 설명.
until 다음에 나오는 명령이 참이 될 때까지 반복함.

until 예시.
N = 1 ; S = 0 ;
until [ $N -gt 10 ] ; do
	echo -n "$N"
	let S = $S + $N
	let N = $N + 1
done




