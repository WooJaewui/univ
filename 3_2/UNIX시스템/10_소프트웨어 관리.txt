
 소프트웨어 관리.



 # 패키지 관리.

소프트웨어 패키지 관리.
소프트웨어를 설치하고 업데이트 등을 하는 작업.
패키지 관리 도구를 사용하는 것이 편리함.
리눅스 초기에는 소스 프로그램을 가져와 적당한 디렉토리 구조를 만들고 컴파일, 링크하여 작업해야 했음.
컴파일되어 있는 패키지를 다루고, 지원 도구를 사용하는 것이 효율적.
리눅스 배포판에 따라 패키징 방법이 다름.
소프트웨어의 배포를 위해 표준 방법이 필요함.
데비안 계열은 DEB( .deb) , 레드햇 계열은 RPM( .rpm )방법.
도구를 사용하거나 '패키지'파일을 찾아 다운로드 후 설치함.
패키지 파일은 패키지를 구성하는 파일들을 묶어 압축한 파일.

패키지 파일과 저장소.
패키지 관리의 기본 단위는 '패키지 파일'이다.
바이너리 프로그램, 패키지의 메타데이터, 스크립트 파일로 구성됨.
메타데이터는 패키지이름, 버전, 아키텍처, 패키지 요약과 설명, 설치를 위해 필요한 다른 패키지 정보 등.
설치 / 업데이트 / 삭제 / 환경 설정을 위한 스크립트 파일도 필요하다.
패키지 저장소는 배포용 패키지를 저장하고 관리하는 사이트이다.
고수준 패키지 관리 도구는 많은 패키지 저장소를 검색할 수 있음.

패키지 의존성.
어떤 패키지의 실행을 위해 다른 패키지가 필요할 수 있음.
패키지를 설치할 때 선행 패키지가 이미 설치되어 있거나 함께 설치해야 함.
고수준 패키지 관리 도구 YUM은 의존성 문제를 해결.
저수준 패키지 관리 도구 RPM은 해당 패키지만 설치하거나 제거.



 # RPM 패키지 관리자.

RPM.
레드햇 계열 리눅스에서 패키지 파일의 표준 형식.
형식 : 패키지이름-버전-릴리스.아키텍처.rpm
예 : firefox-45.0.1-1.el6.contos.i686.rpm
RPM은 RPM Package Manager를 의미하기도 함.
패키지가 설치되면 로컬 RPM 데이터베이스에 정보가 저장됨.
rpm -qa 또는 rpm -qi firefox와 같이 설치된 패키지의 정보를 질의할 수 있음.

rpm [options] [packages]
-i : 설치.
-U : 업데이트.
-e : 삭제.
-q : 질의.
설치나 업데이트를 할 때는 packages에 패키지 파일의 이름을 지정함.
질의를 할 때는 보통 packages에 패키지의 이름을 사용함.

패키지 설치.
패키지를 설치할 때 선행 패키지가 설치되어 있지 않으면 의존성 문제로 설치가 실패함.

rpm 예시.
rpm -qa : 설치되어 있는 모든( -a ) 패키지를 나열함.
rpm -qi package_name : 패키지 이름, 버전, 설명 등의 다양한 정보(-i)를 출력함.
rpm -qf file : 지정 파일(-f)을 포함하는 패키지 파일을 출력함.



 # YUM 패키지 관리자.

YUM Yellowdog Updater Modified.
RPM 방법에 기초한 자동 패키지 설치, 업그레이드 및 삭제 도구.
저장소 목록을 유지하여 설치 가능한 패키지를 검색.

YUM의 설정 파일 - /etc/yum.conf.
[main] 섹션에 전반적인 설정 옵션이 존재함.
파일을 저장하는 캐시 디렉토리, 설치 후 캐시 파일의 보관 여부, 디버그, 로그 파일, 메시지 수준 등.

YUM의 설정 파일 - /etc/yum.repos.d/ 디렉토리의 *.repo 파일.
저장소의 설정 파일로 [저장소 아이디], 저장소 이름(name), 베이스 URL(baseurl)과 미러리스트 등이 설정.
베이스 URL과 미러리스트는 실제 패키지가 저장된 장소 (로컬 디렉토리 또는 네트워크 상에서 관리하는 디렉토리)
yum repolist enabled 명령으로 활성화된 저장소를 확인할 수 있음.

yum [options] command.
command는 yum의 서브 명령.
command의 인수로 패키지를 지정할 때 name, name.arch, name-ver, name-ver-rel, name-ver-rel.arch 등의 형태.

yum 설치 수행과정.
설정 파일을 읽음.
yum 저장소에 있는 모든 패키지의 멭타데이터가 로컬 캐시 디렉토리에 저장됨.
패키지의 의존성을 확인한 후 필요한 패키지를 다운로드 받음.
패키지에 포함된 파일을 적당한 디렉토리에 복사하여 설치함.
설치된 패키지의 정보를 로컬 'RPM 데이터베이스'에 저장함.

yum 사용 예.
yum search string [strings] : 패키지 이름이나 요역에서 문자열을 검색하여 패키지를 찾음.
yum search web server 
yum install package [packages] : 패키지를 설치함.
yum install emacs.
yum update [packages] : 패키지를 업데이트함.
yum remove package [packages] : 패키지를 삭제함.
yum reinstall pacakge [packages] : 패키지를 다시 설치함.
yum info [options] [packages] : 패키지의 설명과 요약 정보를 출력함.
yum info firefox.
yum list available [packages] : 설치되어 있지 않은 가용 패키지의 목록을 출력함.
yum list installed [packages] : 설치되어 있는 패키지 목록을 출력함.
yum list installed emacs.
yum deplist package [packages] : 패키지가 의존하는 요소와 그것을 제공하는 패키지를 나열함.
yum repolist [options] : 저장소 목록을 나열함.
yum repolist enabled : 활성화된 저장소 목록을 출력함.
yum history [info | undo | ... ] : 패키지의 설치와 삭제 이력이 /var/log/yum.log 파일에 기록됨.
yum histroy : 이력을 확인할 수 있다.
yum history info 3 : 해당 yum 명령의 자세한 내용을 확인함.
yum history undo 3 : 해당 명령을 취소할 수 있음.



 # 압축.

파일 압축.
시스템 파일이나 데이터를 백업할 때 파일 압축이 필요함.
압축을 통해 디스크 공간을 절약하거나 데이터 전송 시간을 줄일 수 있음.
다양한 압축 기술이 존재.
공간 효율과 압축 속도에서 차이가 남. 
gzip, bzip2, xz, zip 등.

gzip 명령.
gzip은 압축 파일의 형식이자 파일의 압축과 해제를 위한 프로그램.
초기 Unix 시스템의 압축 프로그램을 GNU 프로젝트에서 수정한 버전.

gzip [options] [files]
압축시 원본 파일은 .gz 확장자를 갖는 파일로 대체됨.
gzip file을 수행하면 file은 없어지고 file.gz이 만들어짐.

gzip 옵션.
-c : 결과를 표준 출력으로 보내고 원본 파일은 그대로 유지됨.
-d : 압축을 풀 때 사용하며 gunzip 명령과 같음.
-r : 인수로 디렉토리가 주어질 때 디렉토리에 포함된 모든 파일을 재귀적으로 탐색하여 압축.
-t : 압축 파일의 무결성을 검사함.
-v : 압축 또는 해제하면서 파일의 이름과 압축률을 출력해 줌.
-number : 압축률을 의미하는 1~9 사이의 값을 주며 기본값은 6.

gunzip 명령.
.gz, .Z, .tgz, .taz 등의 확장자를 가진 압축파일을 풀고 확장자를 제거함.

gzip, gunzip 사용 예.
gzip foo.txt : 압축 파일 foo.txt.gz이 만들어지고 원본 파일은 없어짐.
gzip -d foo.txt.gz : 압축을 풀고 원본 파일을 다시 만듦. 압축 파일은 없어짐.
gzip *.txt : 확장자가 .txt인 모든 파일에 대해 개별적으로 압축함.
gunzip -d *.gz : 모든 압축 파일을 풀고 원본 파일을 만듦.
gzip -c file > bar.gz : file1을 압축하여 bar.gz를 만들고 file2를 압축하여 bar.gz에 추가함.
gunzip -c bar.gz : 압축을 풀고 결과를 표준 출력으로 보냄. 기존 압축 파일은 그대로 유지함.

bzip2 명령.
블록 정렬 압축 알고리즘을 사용한 파일 압축 프로그램.
gzip과 유사하나 압축 효율이 매우 좋음( 압축 속도는 느림 - 큰 파일에 사용 )

tar 명령.
여러 파일을 하나의 아카이브 파일로 묶거나 아카이브 파일에서 파일을 추출하는 명령.
아카이브 : 백업 등의 목적으로 여러 파일을 하나로 묶은 것.

tar mode [options] [tarfile] [pathnames...]
tarfile은 아카이브를 의미.
pathname은 아카이브에 넣을 파일이나 디렉토리.
아카이브 파일의 확장자는 봍통 .tar를 사용함.
모드나 옵션을 사용할 때 대시( - )를 사용하지 않는 편임.

tar 모드.
A : tar 파일을 아카이브에 추가.
c  : 새로운 아카이브 생성.
x : 아카이브로부터 파일을 추출.
r : 아카이브에 파일을 추가.
t : 아카이브에 포함된 파일의 목록을 출력.

tar 옵션.
f : 아카이브 파일을 지정.
v : 처리 과정에서 대상 파일을 보여줌.
z : tar명령에서 gzip을 사용.
j : tar 명령에서 bzip를 사용.

tar 사용 예.
tar cvf foo.tar * .c : 현재 디렉토리에서 .c로 끝나는 모든 파일을 foo.tar로 묶어 만들고 결과를 출력.
tar tvf foo.tar : 아카이브 foo.tar에 있는 파일 목록을 출력함.
tar xvf foo.tar : 현재 디렉토리에 아카이브 foo.tar를 풀어줌.
tar cvf bar.tar backup/ : 디렉토리 backup의 내용을 묶어 아카이브 bar.tar를 만듦.
tat cvfz baz.tar.gz backup/ : 위와 같으나 아카이브를 만들 때 gzip을 이용하여 압축함.
tar xvfz bar.tar.gz : gzip으로 압축도니 아카이브를 풀어줌.


