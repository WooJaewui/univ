
 데이터베이스의 이해.



 # 데이터베이스의 역할.

데이터 단위.
bit -> byte -> kilobyte KB -> megabyte MB -> gigabyte GB -> terabyte TB 
-> petabyte PB -> exabyte EB -> zettabyte ZB -> yottabyte YB

데이터 관리의 필요.
대량의 데이터를 저장 및 관리하고 필요한 데이터를 신속히 검색할 수 있도록 보조하는 장치.

파일 처리 시스템 file processing system.
데이터베이스가 개발되기 전에 데이터 관리에 사용.
업무 별 애플리케이션이 개별 데이터를 데이터 파일에 저장 관리하는 시스템.

파일 처리 시스템 문제 - 데이터 종속의 문제.
저장된 데이터가 특정 H/W에서 또는 사용자 및 S/W만 사용될 수 있도록 제한되는 문제.
물리적 , 논리적 데이터 종속 문제.

파일 처리 시스템 문제 - 데이터 중복의 문제.
동일한 사항에 대한 중복 데이터는 일관성, 보안성, 경제성 측면에서 문제 발생.
일관성 : 한 사실에 대해 한 개의 데이터 값을 유지.
보안성 : 같은 데이터에 같은 수준의 보안 유지.
경제정 : 데이터에 대해 최소한의 저장 공간만을 점유.

파일 처리 시스템 문제 - 무결성 훼손의 문제.
실세계의 데이터는 데이터가 가질 수 있는 가능 범위( 제약조건 )를 포함.
데이터 무결성 : 데이터 정확성 보장, 데이터의 제약조건을 만족.

파일 처리 시스템 문제 - 동시 접근의 문제.
동일 데이터에 다수 사용자의 접근 허용 시 일관성이 훼손.



 # 데이터베이스의 특징.

데이터베이스의 특징.
데이터베이스 시스템의 자기 기술성 : 데이터 정의 및 설명을 포함.
프로그램과 데이터 격리 및 추상화 : 사용자에게 데이터에 대한 개념적 표현을 제공.
다중 뷰 제공 : 사용자가 관심을 갖는 DB의 일부만을 표현.
트랜잭션 처리 : 다수의 사용자에게 일관성을 보장.

데이터 관련 용어.
값 : 여러가지 의미로 사용될 수 있는 것. ( 12 - 12일, 12월, 12도 , ... )
메타데이터 : 이 값이 어떤 의미인지 알려주는 정보. 
데이터 : 값 + 메타데이터.
데이터베이스 DB : 애플리케이션 시스템에서 사용되는 데이터의 집합.
데이터베이스 관리 시스템 DBMS : DB에 저장된 데이터 사용을 위한 소프트웨어 패키지.
데이터베이스 시스템 : DB에 정보를 저장 관리하여 사용자에게 정보를 제공하는 컴퓨터 기반 시스템.

DBMS의 3단계 구조.
외부 단계 : 뷰, 외부스키마. ( 일반 사용자가 보는 데이터 집합 )
개념 단계 : 개념 스키마. ( 데이터의 집합 )
내부 단계 : 내부 스키자. ( 개념 단계에 데이터를 어떻게 저장할 것인가 )

트랜잭션.
하나의 논리적 작업을 처리하기 위한 일련의 데이터베이스 명령의 집합.



 # 데이터베이스의 구성요소.

데이터베이스 언어.
DBMS는 사용자가 데이터베이스를 쉽게 사용하고 다룰 수 있도록 언어 형태의 인터페이스를 제공.
역할에 따라 DDL, DML로 구분.
현대 데이터베이스 언어는 자연어와 유사한 형태의 SQL로 표준화.

DDL Data Definition Language.
데이터베이스 객체를 생성, 수정, 삭제하기 위한 언어.
데이터 모델에 따라 애플리케이션 프로그램이 요구하는 데이터의 논리적 구성이나 특징을 규정.
데이터가 기억장치에 저장되도록 데이터의 물리적 구성을 규정.
물리적 구성과적 구성 간의 사상을 규정.

DML Data Mainpulation Language.
구조화된 데이터에 사용자가 접근 및 조작할 수 있도록 지원하는 언어.
데이터 조작이 쉽고 간편.
데이터 조작 기능이 정확하고 완전.
사용자의 요청을 시스템 내부에서 효율적으로 처리 가능.

데이터베이스 시스템 아키텍처 - 중앙집중식 방식.
단일 서버가 다수의 클라이언트 장치를 대신하여 작동.
중앙 컴퓨터의 과부하로 전체적인 성능 저하.

데이터베이스 시스템 아키텍처 - 분산 시스템 방식.
클라이언트 장치의 성능 향상으로 자체적인 처리 능력 보유.
클라리언트-서버 데이터베이스 시스템.
애플리케이션 프로그램의 부하를 분산.
소프트웨어의 유지보수 비용을 절감 및 이식성 증가.

3계층 구조.
클라이언트 - 애플리케이션 서버 - 데이터베이스시스템.


















