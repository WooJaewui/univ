
 출석수업_디지털 논리회로.



 # 1교시.

서로 다른 진수의 변환.
● 정수와 소수 부분을 나눠서 구해야 된다.

2진수와 ( 2 ** n ) 진수의 상호 변환.
● 2진수를 ( 2 ** n ) 진수로 변환하려면 n개 만큼 묶어서 계산한다.
● 소수점은 끝에 값이 없을경우 0을 붙여준다.



 # 2교시.

1의 보수.
기존의 0, 1 비트 값에 0 -> 1, 1 -> 0으로 바꿔준다.

2의 보수.
1의 보수에 + 1을 해준다.

10진 코드.
10진 코드를 표현하기 위해서는 4비트 이상이 필요하다.

ASCII American Standard Code for Information Interchange.
● 하나의 영숫자 코드가 7비트로 구성, 전체 수는 128개.
● 실제 사용될 때는 1비트의 패리티 비트를 포함하여 전송.

EBCDIC Extended Binary Coded Decimal Interchange.
● 하나의 영숫자 코드가 8비트로 구성.
● 1비트의 패리티 비트를 포함하여 전송하면 9빝트가 되어 비효율적.

유니코드.
ASCII코드의 한계점을 극복하고, 전 세계 문자체계를 표현한다.
1995년 ISO/IEC JTC1에서 국제표준 제정.



 # 3교시.

논리연산.
2진 디지털 시스템에서 입출력 관계의 표현.
	1. 그래프나 진리표로 표시.
	2. 논리함수로 표시.

논리 연산자.
AND : 곱하기( * )
OR : 더하기( + ) 
NOT : 변수 위에 줄( - )을 그어 표시, ' ( 작은 따옴표 )

논리집합( 부울집합 )
집합이 0( 거짓 )과 1( 참 )으로만 구성된 집합 { 0, 1 }

AND 게이트.
F = XY
모든 입력이 1이 되었을 때 출력이 1이 된다.

OR 게이트.
F = X + Y
모든 입력이 0이 되었을 때 출력이 0이 된다.

NOT 게이트.
F = X'
하나의 입력에 대해 입력에 역을 출력한다.

NAND 게이트.
F = X'Y'
모든 입력이 1이 되었을 때 출력이 0이 된다.

NOR 게이트.
F = X' + Y'
모든 입력이 0이 되었을 때 출력이 1이 된다.

XOR 게이트.
입력이 모두 0 또는 모두 1일 때 출력이 0이 된다.

부울대수 Boolean Algebra.
0과 1의 값을 갖는 논리변수로 논리연산을 다루는 대수.

부울함수 Boolean Function.
논리변수의 상호관계를 나타내기 위해 부울변수, 부울연산기호, 괄호 및 등호 등으로 나타내는 대수적 표현.

부울함수와 논리회로도.
부울함수는 논리 게이트들로 구성되는 논리회로도 작성 가능.

진리표 truth table.
논리변수에 할당한 0과 1의 조합의 리스트.
부울함수는 진리표로 나타낼 수 있다.

부울함수와 진리표와의 관계.
부울함수에 대한 진리표는 하나이다.
동일 진리표를 만족하는 부울함수는 여러 개가 될 수 있다.
동일 진리표에 대한 논리회로도는 여러 개가 될 수 있다.
	● 결론적으로 논리회로도는 단순해야 한다.
	● 부울함수의 단순화가 필수.

부울함수의 간소화 방법.
1. 대수적인 방법.
2. 도표를 이용한 방법.
3. 테이블을 이용한 방법. ( 교재에서는 다루지 않음 )







