
 알고리즘 학습에 앞서서.



 # 과목 소개.

컴퓨터과학.
컴퓨터 + 데이터 + 프로그램 + 알고리즘.
알고리즘 과학.

학습 목표.
잘 알려진 특정 문제를 통해 알고리즘의 설계 및 분석 방법 습득.
컴퓨터 기반 문제 해결 방법에 대해 체계적으로 생각하는 훈련.
주어진 문제에 대한 지적 추상화 능력 및 통찰력 향상.



 # 알고리즘의 필요성.

알고리즘 
문제 해결을 위한 방법이다.
문제( 데이터 ) -> 일련의 단계적인 처리 과정( 알고리즘 ) -> 결과( 정보 )
효율적인 처리 과정을 지향한다.



 # 기본 자료구조..

자료구조.
컴퓨터에서 데이터 사이의 논리적 관계를 표현하고 조직화하는 방법.

좋은 프로그램.
자료구에 대한 고려 없는 효율적인 알고리즘의 선택,
알고리즘에 대한 고려 없는 효율적인 자료구조의 선택은 무의미하다.

선형 / 비선형.
선형 : 배열 , 연결 리스트 , 스택 , 큐.
비선형 : 트리 , 그래프.

배열.
같은 타입의 여러 개의 값들을 하나의 변수에 저장하는 방법.
내가 생각한 논리적인 순서와 데이터가 저장되는 물리적인 순서가 같다.
중간 데이터를 삽입/삭제하면 데이터의 이동이 발생한다. 
연결 리스트에 비해 검색 성능이 뛰어나다.

연결 리스트.
내가 생각한 논리적인 순서와 데이터가 저장되는 물리적인 순서가 같지 않다.
head , tail을 통해 첫번째 , 마지막 값의 주소를 나타낸다.
데이터를 저장하는 공간과 다음 값의 주소를 저장하는 공간을 가진다.
중간 데이터를 삽입/삭제하기 편리하다.
배열에 비해 검색 성능이 떨어진다.

연결 리스트 종류.
단일 연결 리스트 : 데이터 , 다음 주소 값을 저장.
이중 연결 리스트 : 데이터 , 이전 주소 , 다음 주소 값을 저장.
원형 연결 리스트 : 마지막 데이터에서 첫번째 데이터로 연결된다.

스택.
LIFO 방식으로 데이터를 사용한다. ( 후입선출 )
push, pop으로 데이터를 입/출력한다.

큐.
FIFO 방식으로 데이터를 사용한다. ( 선입선출 )

트리.
하나 이상의 노드로 구성된 유한 집합.
원소 가운데 단 하나의 루트 노드가 존재한다.
루트 노드를 제외한 나머지 노드는 n개의 서로 분리된 부분집합으로 나누어지며 서브트리라 부른다.

트리 관련 용어.
차수 degree : 다음 노드의 개수( 노드의 차수 ) , 트리에 노드의 차수 중 가장 큰 값 ( 트리의 차수 )
리프 노드( 단말 노드 ) : 노드의 차수가 0인 노드.
비단말 노드 : 리프 노드가 아닌 노드.
부모 parent 노드 : 자신의 노드 위에 연결된 노드.
자식 child 노드 : 자신의 노드 아래에 연결된 노드.
형제 sibling 노드 : 같은 부모 노드를 가진 노드들.
조상 ancestor 노드 : 자신의 노드 위에 연결된 노드와 그 노드의 부모들.
후손 descendant 노드 : 자신의 노드 아래에 연결된 노드와 그 노드의 자식들.
레벨 level : 루트 노드로부터 거리.
높이 height ( 깊이 depth ) : 레벨이 가장 큰 노드의 값.
숲 forest : 모든 서브트리의 집합.

이진트리.
각 노드의 차수가 2 이하인 순서 트리.
아무런 값이 없는 공백도 이진트리에 포함된다.
레벨 i에서 최대 노드의 개수 2 ** i 
높이 h인 이진 트리의 최대 노드의 개수 ( 2 ** h ) - 1
단말노드의 수 = 차수가 2인 노드의 수 + 1 ;

이진트리의 종류.
포화 perfect 이진 트리 : 빈 자리 없이 노드가 꽉 찬 트리.
완전 complete 이진 트리 : 마지막 노드전까지 포화 이진트리이고, 마지막 노드는 왼쪽부터 차있는 트리.
전 full 이진 트리 : 자식 노드가 0 또는 2로만 구성되어 있는 트리.
균형 balanced 이진 트리 : 왼쪽 오른쪽 서브트리의 높이 차이가 1이내인 트리.
경사 skewed 이진 트리 : 노드가 한 쪽방향으로만 있는 이진트리.

그래프 G = ( V , E )
V : 정점의 집합 , E : 간선의 집합.

무방향 undirected 그래프.
방향이 없는 그래프.
간선을 나타낼 때 방향이 없기 때문에 ( a , b ) = ( b , a )가 같다.

방향 directed 그래프.
방향이 있는 그래프.
간선을 나타낼 때 방향이 있기 때문에 a -> b 인 경우 < a , b >로만 표현할 수 있다.

인접 행렬 adjacency matrix.
2중 배열을 통해 그래프를 나타낸다.
가중 그래프인 경우 무한대는 간선이 존재하지 않는다.
가중 그래프인 경우 0은 본인에서 본인을 나타낸다.

인접 리스트 adjacency list.
각 정점에서 간선이 존재하는 값으로 이동할 때의 가중치를 나타낸다.








