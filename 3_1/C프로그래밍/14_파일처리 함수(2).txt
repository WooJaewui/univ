
 파일처리 함수(2)



 # 순차파일 입출력함수.

순차파일 출력함수.
● 만들어진 파일에 자료를 기록하는 함수.
● putc( ), fputc( ), fputs( ), fprintf( ).

putc( ) 함수.
● 문자 단위의 파일 출력함수.
● putc( 문자변수, 파일포인터변수 );

fputs( ) 함수.
● 문자열을 파일로 출력할 때 사용.
● fputs( 문자열변수, 파일포인터변수 );

fprintf( ) 함수.
● 지정된 형식을 가지고 파일에 자료를 출력.
● 여러 항목의 복합적인 자료로 구성된 레코드를 저장할 때 유용.
● fprintf( 파일포인터 변수, "출력형식" , 변수 );

표준파일.
표준입력 : stdin. ( 키보드 )
표준출력 : stdout. ( 모니터 )
표준에러 : stderr. ( 모니터 )

순차파일 입력함수.
● 파일 출력함수에 의해 만들어진 순차파일의 저장된 자료를 읽어 내는 함수.
● 자료를 읽을 때는 파일의 끝에 있는 EOF 신호를 만날 때까지 읽을 수 있는 프로그램 작성.

getc( ) 함수.
● 파일에 저장된 문자를 읽을 때 사용.
● getc( 파일포인터변수 ) ;

fgetc( ) 함수.
● 파일에 저장된 문자열 자료를 읽을 때 사용.
● 읽어 낼 문자열의 길이를 만드시 정의.
● fgets( 문자열변수, 문자열 길이 + 1, 파일포인터변수 );

fscanf( ) 함수.
● 숫자, 문자 등 복합적인 자료로 구성된 레코드를 읽을 때 사용.
● 일반적으로 파일의 끝을 판별하는 feof( ) 함수와 같이 사용.
● fscanf( 파일포인터 변수, "입력형식", 변수 ) ;



 # 랜덤파일처리.

랜덤파일 random file.
● 파일의 임의의 위치에서 자료를 읽거나 쓸 수 있다.
● 레코드의 길이가 일정.
● 순차파일에 비해 기억공간 낭비.
● 순차파일에 비해 레코드 검색이 빠르고 효과적.
● 일반적으로 랜덤파일을 입출력할 때는 2진 모드로 파일을 개방.

2진 모드의 특징.
● 텍스트 파일보다 적은 기억공간.
● 레코드의 길이를 프로그래머가 결정.
● 파일 포인터의 위치 변경 가능.



 # 랜덤파일 입출력함수.

fwrite( ) 함수.
● fwrite( 저장자료변수, 레코드길이, 레코드개수, 파일포인터 );
● 레코드의 길이를 지정.
● 자료저장 변수는 포인터 형.

fread( ) 함수.
● fread( 읽을 자료변수, 레코드길이, 레코드개수, 파일포인터 );
● 읽기에 성공하면 읽은 레코드 수를 리턴.



 # 랜덤파일의 위치 제어.

fseek( ) 함수.
● 파일 포인터를 임의의 위치로 이동시키는 함수.
● 랜덤파일의 특정부분을 입출력할 수 있다.
● fseek( 파일포인터 변수, 이동할 상대위치, 기준위치를 지정하는 모드 );
● 기준 위치로부터 앞, 뒤로 이동하는 상대위치 개념 사용.

기준위치 지정모드.
● SEEK_SET : 파일의 시작위치.
● SEEK_CUR : 현재 파일포인터의 위치.
● SEEK_END : 파일의 끝 위치.





