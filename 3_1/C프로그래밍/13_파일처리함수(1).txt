
 파일처리함수(1)



 # 파일 입/출력의 개념.

파일 입출력이란 ?
● 보조기억장치의 파일을 이용한 자료의 입출력.
● 표준 입/출력 함수를 이용.

파일처리함수.
● 보조기억장치에 들어있는 정보들의 모임을 파일이라 하고, 이러한 파일을 제어하는 함수.

파일.
● 보조기억장치에 저장된 데이터들의 모임.
● 일련의 바이트 byte 들로 구성.
● C 프로그램은 운영체제를 통해서 파일을 읽거나 쓰게 된다.
● C 언어에서는 컴퓨터와 연결된 모든 장치들까지도 모두 파일의 범주에 넣어서 처리.

파일의 구분.
1. 텍스트 파일 text file.
	● 화면에 출력되는 문자들로 구성된 파일.
2. 2진 파일 binary file.
	● 텍스트 파일을 포함한 모든 종류의 자료를 다루는 파일.
	● 컴파일 되어 있어 기계어에 가까우므로 내용을 이해하거나 인쇄가 불가능.

파일 입력.
● 디스크 상의 특정 위치에 수록되어 있는 자료를 읽어 들여 기억공간에 수록하는 절차.
● 파일포인터를 사용하여 파일 입출력 수행.

파일 출력.
● 기억공간에 있는 자료를 디스크 상의 특정 위치에 수록하는 절차.
● 파일포인터를 사용하여 파일 입출력 수행.

파일 포인터.
● 파일이 어디에 있는지를 가리키는 포인터.
● 모든 파일 입출력 함수는 파일 포인터를 사용.
● 파일을 입출력 할 때 버퍼 사용.

버퍼 buffer.
● 기억 공간과 디스크 사이에 존재하는 임시 기억 공간.
● 파일 입출력 시 디스크에 저장된 자료를 기억 공간으로 읽어 들이거나, 반대로 저장할 때 사용.



 # 파일포인터를 이용한 파일 입/출력.

자료의 입/출력 개념.
● 프로그램과 입/출력 장치( 콘솔, 파일, 소켓 등)와의 사이에 이루어지는 자료의 입력과 출력.
● 자료의 입/출력을 위한 논리적인 통로가 필요 : 스트림.

스트림 stream.
● 시스템 프로그램과 콘솔, 파일, 소켓 등과 서로 데이터를 전송하기 위한 통로.

표준 입출력장치를 이용한 자료 입출력.
● 표준 입출력장치와의 스트림은 프로그램 실행 시 자동으로 생성, 소멸.
● 파일 입출력을 위한 스트림은 프로그램을 통해 생성과 소멸을 시켜주어야 한다.

파일 입출력의 수행과정.
1. 파일을 연다.
2. 입출력을 수행한다.
3. 파일을 닫는다.

스트림의 생성.
● 파일과 프로그램과의 통로( 논리적인 접속 )를 구성.
● 통로 역할을 파일포인터가 수행.

파일 입출력 프로그램 구조.
● 파일 포인터 선언 : FILE * fp;
● 파일 열기 : fp=fopen( "파일명", "모드" ) ;
● 읽기/쓰기 : <입출력 수행>
● 파일 닫기 : fclose( fp ) ;

사용예시.
#include <stdio.h>
void main( ) { 
	char ch;
	FILE *fp;

	fp = fopen( "파일경로\sample.txt" , "w" );
	for( ch='A'; ch<='Z' ; ch++ ) { 
		fputc( ch, fp );
	}
	fclose( fp ) ;
}

파일포인터의 선언.
● 파일 입출력을 위해서는 맨 처음 파일포인터를 선언해야 한다.
● 이 파일포인터는 실제 파일과 프로그램을 연결해 주는 통로가 된다.

파일 열기.
● 프로그램과 디스크 상의 파일 사이에 데이터가 입출력할 수 있도록 통로를 만들어 주는 것.
● 입출력이 정상이면 지정된 파일의 파일포인터에 시작주소 값을 리턴.
● 파일이 개방되지 않을 때는 에러 값 NULL을 리턴.
● r, w, a, t, b 를 통해 모드를 표현. ( t는 생략가능 )
● t 텍스트 모드 : 프로그램에서 파일로 자료를 입출력 할 때 변환이 일어나는 입출력모드.
● b 2진 모드 : 변환이 일어나지 않는 입출력모드, 문자 변환이 불 필요.


 
 # 순차파일처리.

파일.
● 정보의 집합.
● 레코드 단위로 구성.

레코드.
● 파일 입출력처리에 사용되는 논리적인 기본단위.
● 각 레코드들은 필드들로 구성.

순차파일 sequential file.
● 파일의 처음부터 자료를 차례로 읽고, 기록하는 파일.
● 레코드의 길이가 일정하지 않은 파일.

랜덤 파일 random file.
● 파일의 임의의 위치에서 자료를 읽고, 기록하는 파일.
● 레코드의 길이가 일정한 파일.

순차파일에서의 레코드 구성.
● 순차파일은 레코드의 길이가 일정하지 않기 때문에 CR/LF를 사용하여 레코드를 구분.

순차파일 출력함수.
● 만들어진 파일에 자료를 기록하는 함수.
● putc( ), fputc( ), fputs( ), fprintf( ).

순차파일 입력함수.
● 순차파일의 저장된 자료를 읽어 내는 함수.
● getc( ), fgetc( ), fgets( ), fscanf( ).










