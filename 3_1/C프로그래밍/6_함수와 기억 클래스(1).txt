
 함수와 기억 클래스(1)



 # 함수의 개념.

함수.
● 함수란 특정한 작업( 기능 )을 수행하도록 설계된 독립적인 프로그램.
● 이러한 함수들이 정해진 순서에 따라 실행됨으로써 프로그램의 기능을 수행.
● C 프로그램은 함수들로 구성.
	○ 전체의 실행 내용을 몇 개의 모듈로 분류.
	○ 각각의 모듈에 해당하는 내용을 함수로 작성.

함수의 특성.
함수들은 서로를 자유로이 호출 가능.
모든 함수는 서로 독립적.

함수의 장점.
프로그램의 수정이 용이하다.
함수 재사용으로 코드 중복을 최소화한다.
프로그램의 기능을 한 눈에 파악할 수 있게 해줌으로써 유지관리가 쉽다.

함수의 개념.
기능별 독립된 단위로 구성한 경우.



 # 표준 함수.

C 언어에서의 함수.
표준함수 : C언어 자체에서 제공하는 함수.
사용자 정의함수 : 사용자가 정의하여 사용하는 함수.

표준 함수.
표준함수의 원형은 헤더파일에 정의.
표준함수의 실체는 라이브러리 파일에 수록.
표준함수를 사용하려면 원형이 선언되어 있는 헤더파일을 #include 시켜 주어야 한다.

표준함수 예.
stdio.h , conio.h , math.h , string.h , ctype.h , stdlib.h



 # 사용자 정의 함수.

C 프로그램에서의 함수.
● main( ) 함수 안에 표준함수를 사용하는 형태.
● 그러나 동일 블록 내의 프로그램 길이가 길어지면 전체 프로그램은 복잡해지고 이해하기가 어려워진다.
● 단위 프로그램으로 나누어 정의함으로써 프로그램의 작성과 이해랄 쉽게 할 필요가 있다.

함수 정의의 구조.
반환자료형 함수명( 자료형 매개변수1, 자료형 매개변수2, ... ) {
	함수 호출시 실행할 내용;
}



